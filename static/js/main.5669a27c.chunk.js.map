{"version":3,"sources":["Components/Top/EnterData.jsx","Components/Top.jsx","Components/Body/ExpenseItem.jsx","Components/Body/FilterExpense.jsx","Components/Chart/ChartBar.jsx","Components/Chart/Chart.jsx","Components/Chart.jsx","Components/Body.jsx","Components/Footer.jsx","App.js","index.js"],"names":["ExpenseData","onclick","undoaddexpense","useState","title","amount","date","values","setValues","handleSetValue","event","target","name","value","preValue","className","autoComplete","onSubmit","e","preventDefault","onChange","type","min","step","onClick","Top","sendValue","addExpense","setAddExpense","receivedValue","ExpenseItem","month","Date","toLocaleString","day","year","getFullYear","FilterExpense","getyear","selectedYear","sendYear","items","map","Set","addYear","ChartBar","props","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Body","getYear","setGetYear","filter","includes","filteredExpenses","length","expenseItem","id","Footer","App","uuid","alert","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.5669a27c.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function ExpenseData({ onclick, undoaddexpense }) {\r\n  const [values, setValues] = useState({ title: \"\", amount: \"\", date: \"\" });\r\n\r\n  function handleSetValue(event) {\r\n    const { name, value } = event.target;\r\n    setValues((preValue) => {\r\n      return { ...preValue, [name]: value };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <form autoComplete=\"off\" onSubmit={(e) => e.preventDefault()}>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input\r\n              onChange={handleSetValue}\r\n              value={values.title}\r\n              type=\"text\"\r\n              name=\"title\"\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              onChange={handleSetValue}\r\n              value={values.amount}\r\n              type=\"number\"\r\n              name=\"amount\"\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input\r\n              onChange={handleSetValue}\r\n              value={values.date}\r\n              type=\"date\"\r\n              name=\"date\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              undoaddexpense(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            className=\"new-expense__actions\"\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              onclick(values);\r\n            }}\r\n          >\r\n            Add Expense\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport EnterData from \"./Top/EnterData\";\r\n\r\nexport default function Top({ sendValue }) {\r\n  const [addExpense, setAddExpense] = useState(false);\r\n\r\n  function handleSetAddExpense() {\r\n    setAddExpense(true);\r\n  }\r\n\r\n  function undoAddExpense(value) {\r\n    setAddExpense(value);\r\n  }\r\n\r\n  function receiveValues(receivedValue) {\r\n    sendValue(receivedValue);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {addExpense ? (\r\n        <EnterData onclick={receiveValues} undoaddexpense={undoAddExpense} />\r\n      ) : (\r\n        <div className=\"new-expense\">\r\n          <button onClick={handleSetAddExpense}>Add new Expense</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export default function ExpenseItem({ title, amount, date }) {\r\n  const month = new Date(date).toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = new Date(date).toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = new Date(date).getFullYear();\r\n  return (\r\n    <div className=\"expense-item\">\r\n      <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\"expense-date__year\">{year}</div>\r\n        <div className=\"expense-date__day\">{day}</div>\r\n      </div>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{title}</h2>\r\n        <div className=\"expense-item__price\">{\"$\" + amount}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function FilterExpense({ getyear, selectedYear, sendYear }) {\r\n  function addYear() {\r\n    const items = sendYear.map((preValue) =>\r\n      new Date(preValue.date).getFullYear()\r\n    );\r\n\r\n    return [...new Set(items)].map((year) => {\r\n      return (\r\n        <option key={year} value={year}>\r\n          {year}\r\n        </option>\r\n      );\r\n    });\r\n  }\r\n\r\n  function updateSetGetYear(event) {\r\n    getyear(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={selectedYear} onChange={updateSetGetYear}>\r\n          <option value=\"ALL\">ALL</option>\r\n          {addYear()}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport Chart from \"./Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const month = new Date(expense.date);\r\n    const expenseMonth = month.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import ExpenseItem from \"./Body/ExpenseItem\";\r\nimport FilterExpense from \"./Body/FilterExpense\";\r\nimport Chart from \"./Chart\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Body({ sendValue }) {\r\n  const [getYear, setGetYear] = useState(\"2021\");\r\n  const expenses = sendValue.filter((expense) =>\r\n    expense.date.includes(getYear)\r\n  );\r\n\r\n  function handleYear(year) {\r\n    setGetYear(year);\r\n  }\r\n\r\n  const filteredExpenses =\r\n    getYear === \"ALL\"\r\n      ? sendValue\r\n      : sendValue.filter((expense) => expense.date.includes(getYear));\r\n\r\n  return (\r\n    <div className=\"expenses\">\r\n      <FilterExpense\r\n        sendYear={sendValue}\r\n        selectedYear={getYear}\r\n        getyear={handleYear}\r\n      />\r\n      {getYear === \"ALL\" ? null : <Chart expenses={expenses} />}\r\n      {filteredExpenses.length ? (\r\n        filteredExpenses.map((expenseItem) => {\r\n          return (\r\n            <ExpenseItem\r\n              key={expenseItem.id}\r\n              title={expenseItem.title}\r\n              amount={expenseItem.amount}\r\n              date={expenseItem.date}\r\n            />\r\n          );\r\n        })\r\n      ) : (\r\n        <h2 className=\"expenses-list__fallback\">No Expenses</h2>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export default function Footer() {\r\n  const year = new Date().getFullYear();\r\n  return (\r\n    <footer>\r\n      <p>Copyright ⓒ {year} by SuSSan@143</p>\r\n    </footer>\r\n  );\r\n}\r\n","import Top from \"./Components/Top\";\nimport Body from \"./Components/Body\";\nimport Footer from \"./Components/Footer\";\nimport * as uuid from \"uuid\";\nimport { useState } from \"react\";\n\nexport default function App() {\n  const [values, setValues] = useState([]);\n  // const [filterValues, setFilterValues] = useState(values);\n\n  function receiveValues(receivedValue) {\n    if (receivedValue.title && receivedValue.amount && receivedValue.date) {\n      setValues((preValue) => {\n        return [\n          {\n            id: uuid.v4(),\n            title: receivedValue.title,\n            amount: receivedValue.amount,\n            date: receivedValue.date,\n          },\n          ...preValue,\n        ];\n      });\n      receivedValue.title = \"\";\n      receivedValue.amount = \"\";\n      receivedValue.date = \"\";\n    } else {\n      alert(\"Fill all required field\");\n    }\n  }\n\n  return (\n    <div>\n      <Top sendValue={receiveValues} />\n      <Body sendValue={values} />\n      <Footer />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}